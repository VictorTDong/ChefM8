@page "/favourites"
@using ChefM8.Pages

@inject User user
@inject NavigationManager nav
@inject IToastService toastService


<PageTitle>Favourites</PageTitle>

<div id="home-searchbar-container">
     <form id="animated" autocomplete="off" @onsubmit='(() => nav.NavigateTo("/search/" + searchValue))'>
        <i class="fa fa-search" aria-hidden="true"></i><input type="text" name="search" placeholder="Find a recipe.." @bind="@searchValue">
    </form>
</div>

<h2 style="padding-top: 20px; font-weight: bold; font-size: 46px;">Favourites</h2>
<div id="allrecipes-section">
    <div id="filter-tab">
        <h3>Refine Recipes</h3>
        <hr />
        <div id="active-filters-list">
            @foreach (var tag in Active_Filters)
            {
                if (tag.IsSelected)
                {
                    <button type="button" class="active-filter" @onclick="() => removeFilter(tag)">@tag.Tag</button>
                }
            }
        </div>
        <hr />
        @foreach (var filter in All_Filters.Filters)
        {
            <nav class="filter-button">
                <label class="filter-collapse" for="filter-collapse-trigger"><span>@filter.Category</span></label>
                <input id="filter-collapse-trigger" type="checkbox">

                <ul class="filter-collapse-content">
                    @foreach (var item in filter.Filters)
                    {
                        <li>
                            <input type="checkbox" name="fltr_checkbox" @bind="item.IsSelected" @onclick="() => editFilter(item)">
                            <label for="fltr_checkbox">@item.Tag.ToString()</label>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
    <div id="recipes-container">
        @foreach (var recipe in FavouriteRecipes)
        {
            @if (Active_Filters.Any())
            {
                @if (!(convertFilters().Intersect(recipe.Tags).Count() == Active_Filters.Count()))
                {
                    continue;
                }
            }
            <div class="recipe-item">
                <button id = "favorites-button" @onclick="() => favouriteRecipe(recipe)" style="@isFavourite(recipe)"></button>
                <img src=@recipe.Recipe.Image @onclick="(() => nav.NavigateTo(recipe.Recipe.Link))">
                <div @onclick="(() => nav.NavigateTo(recipe.Recipe.Link))">
                    <h3>@recipe.Recipe.Name</h3>
                    <h5>@recipe.Description</h5>
                    <p>@recipe.Duration</p>
                </div>
                @foreach (var tag in recipe.Tags)
                {
                    <div class="tags">@tag</div>
                }
            </div>
        }
    </div>
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    public IList<AvailableRecipes> FavouriteRecipes => user.FavouriteRecipes;
    public AllFilters All_Filters { get; set; }
    public List<SelectedFilter> Active_Filters { get; set; }
    public string searchValue;

    public FavouritesPage()
    {
        All_Filters = new AllFilters();
        Active_Filters = new List<SelectedFilter>();
    }

    protected void favouriteRecipe(AvailableRecipes recipe)
    {
        user.FavouriteRecipes.Remove(recipe);
        toastService.ShowError("Removed from Favourites!");
    }

    // not very efficient
    public List<Tags> convertFilters()
    {
        List<Tags> temp = new List<Tags>();
        foreach (var filter in Active_Filters)
        {
            temp.Add(filter.Tag);
        }
        return temp;
    }


    public void addFilter(SelectedFilter tag)
    {
        Active_Filters.Add(tag);
    }

    public void removeFilter(SelectedFilter tag)
    {
        tag.IsSelected = false;
        Active_Filters.Remove(tag);
    }

    // add or remove tag, depending on tag.IsSelected
    public void editFilter(SelectedFilter tag)
    {
        if (!tag.IsSelected)
        {
            addFilter(tag);
        }
        else
        {
            removeFilter(tag);
        }
    }

    public void clearFilter()
    {
        Active_Filters.Clear();
    }

    public string isFavourite(AvailableRecipes recipe)
    {
        if (user.FavouriteRecipes.Contains(recipe))
        {
            return "background-image: url('/favorites-button-clicked.png');";
        } else
        {
            return "";
        }
    }

}