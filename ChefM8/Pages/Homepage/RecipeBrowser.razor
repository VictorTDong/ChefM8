@page "/recipes"
@using ChefM8.Pages

@inject User user
@inject NavigationManager nav
@inject IToastService toastService

@inherits RecipeCode

<PageTitle>Recipes</PageTitle>

<div id="home-searchbar-container">
    <input type="text" id="searchbar" name="searchbar" placeholder="Search for recipes..."/>
    <button id="search-btn" type="submit">Search</button>
</div>
<div id="fav-btn-container">
    <button type="button" @onclick="@(()=>nav.NavigateTo("/favourites"))">Favourites</button>
</div>

<h2 style="padding-top: 20px; font-weight: bold; font-size: 46px;">Discover</h2>
<div id="discover-section">
          
    @foreach (var recipe in Recipes_Functional)
    {
        <div class="discover-item" style="background-image: url('@recipe.Recipe.Image');">
            <div class="discover-description">
                <h3>@recipe.Recipe.Name</h3>
                <h5>@recipe.Description</h5>
                <p>@recipe.Duration</p>
            </div>

        </div>
    }

    @foreach (var recipe in Recipes_Display)
    {
        <div class="discover-item" style="background-image: url('@recipe.Recipe.Image');">
            <div class="discover-description">
                <h3>@recipe.Recipe.Name</h3>
                <h5>@recipe.Description</h5>
                <p>@recipe.Duration</p>
            </div>
        </div>
    }

</div>

<h2 style="padding-top: 20px; font-weight: bold; font-size: 46px;">All Recipes</h2>
<div id="allrecipes-section">
    <div id="filter-tab">
        <h3>Refine Recipes</h3>
        <hr />
        <div id="filter-search-container">
            <input type="text" id="filtersearch" name="filtersearch" placeholder="Find a filter..."/>
            <button id="filter-search-btn" type="submit">Search</button>
        </div>
        <hr />
        @foreach (var filter in All_Filters.Filters)
        {
            <div class="filter-button">
                <input id="filter-collapse-trigger" type="checkbox" name="ch">
                <label class="filter-collapse" for="ch">@filter.Category</label>
                <div class="filter-collapse-content">
                    @foreach (var item in filter.Filters)
                    {
                        <input type="checkbox" name="fltr_checkbox">
                        <label for="fltr_checkbox">@item.ToString()</label>
                    }
                </div>
            </div>
        }
    </div>
    <div id="recipes-container">
      
        @foreach (var recipe in Recipes_Functional)
        {
            <div class="recipe-item">
                <button id = "favorites-button" @onclick="() => favouriteRecipe(recipe)"></button>
                <img src=@recipe.Recipe.Image>
                <h3>@recipe.Recipe.Name</h3>
                <h5>@recipe.Description</h5>
                <p>@recipe.Duration</p>
                @foreach (var tag in recipe.Tags)
                {
                    <div class="tags">@tag</div>
                }
            </div>
        }

        @foreach (var recipe in Recipes_Display)
        {
            <div class="recipe-item">
                <button id = "favourites-button" @onclick="() => favouriteRecipe(recipe)"></button>
                <img src=@recipe.Recipe.Image>
                <h3>@recipe.Recipe.Name</h3>
                <h5>@recipe.Description</h5>
                <p>@recipe.Duration</p>
                @foreach (var tag in recipe.Tags)
                {
                    <div class="tags">@tag</div>
                }
            </div>
        }

    </div>
</div>

@code {

    [CascadingParameter] public IModalService Modal { get; set; }
    public List<AvailableRecipes> Recipes_Functional { get; set; }
    public List<AvailableRecipes> Recipes_Display { get; set; }
    public AllFilters All_Filters { get; set; }

    public RecipeBrowser()
    {
        Recipes_Functional = new List<AvailableRecipes>()
        {
            new AvailableRecipes(new Recipe("Burger", "/recipes/burger", "/recipe-photos/Burger.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Lunch, Tags.Medium, Tags.Beef, Tags.Dinner}, "A classic, restaurant style cheese burger made with beef.", "25 Minutes"),
            new AvailableRecipes(new Recipe("Pancakes", "/recipes/pancakes", "/recipe-photos/Pancakes.jpg",  new List<Ingredient>()), new List<Tags>() {Tags.Breakfast, Tags.Easy, Tags.Dairy}, "Simple fluffly pancakes, perfect to start your day.", "25 Minutes"),
            new AvailableRecipes(new Recipe("Spaghetti", "/recipes/spaghetti", "/recipe-photos/Spaghetti.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Dinner, Tags.Hard, Tags.Pasta, Tags.Dairy}, "Delicious italian style spaghetti with meat sauce.", "45 Minutes")
        };

        Recipes_Display = new List<AvailableRecipes>()
        {
            new AvailableRecipes(new Recipe("Apple Pie", "/recipes", "/recipe-photos/apple_pie.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Dessert, Tags.Easy, Tags.Baking, Tags.Dairy}, "A perfect apple pie for snacks or dessert", "40 Minutes"),
            new AvailableRecipes(new Recipe("Bacon and Eggs", "/recipes", "/recipe-photos/bacon_and_eggs.jpg",  new List<Ingredient>()), new List<Tags>() {Tags.Breakfast, Tags.Easy, Tags.Meats}, "A classic bacon and eggs for breakfast.", "15 Minutes"),
            new AvailableRecipes(new Recipe("Fish and Chips", "/recipes", "/recipe-photos/fish_and_chips.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Lunch, Tags.Easy, Tags.Meats}, "Easy but delicious fried fish and fries that kids love.", "25 Minutes"),
            new AvailableRecipes(new Recipe("Chocolate Fudge", "/recipes", "/recipe-photos/fudge.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Dessert, Tags.Easy, Tags.Baking, Tags.Dairy}, "Simple recipe for a chocolate fudge topped with ice cream", "40 Minutes"),
            new AvailableRecipes(new Recipe("Grilled Cheese", "/recipes", "/recipe-photos/grilled_cheese.jpg",  new List<Ingredient>()), new List<Tags>() {Tags.Breakfast, Tags.Easy, Tags.Vegetarian}, "Quick and easy recipe for grilled cheese sandwhich.", "10 Minutes"),
            new AvailableRecipes(new Recipe("Honey Garlic Tofu", "/recipes", "/recipe-photos/honey_garlic_tofu.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Lunch, Tags.Medium, Tags.Vegetarian}, "Delicious tofu glazed with a sweet honey garlic sauce", "35 Minutes"),
            new AvailableRecipes(new Recipe("Rice and Beans", "/recipes", "/recipe-photos/rice_beans.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Lunch, Tags.Medium, Tags.Vegetarian}, "A hearty meal for rice lovers.", "20 Minutes"),
            new AvailableRecipes(new Recipe("Chicken Shawarma", "/recipes", "/recipe-photos/shawarma_chicken.jpg",  new List<Ingredient>()), new List<Tags>() {Tags.Lunch, Tags.Hard, Tags.Meats}, "A traditional chicken shawarma with garlic sauce.", "50 Minutes"),
            new AvailableRecipes(new Recipe("Garlic Butter Steak", "/recipes", "/recipe-photos/steak_dinner.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Dinner, Tags.Hard, Tags.Beef, Tags.Meats}, "Delicious steak with garlic butter and mashed potatoes.", "75 Minutes"),
            new AvailableRecipes(new Recipe("Tuna Sandwhich", "/recipes", "/recipe-photos/tuna_sandwhich.jpg",  new List<Ingredient>()), new List<Tags>() {Tags.Lunch, Tags.Easy, Tags.Meats}, "Easy recipe for a tuna spread sandwhich.", "20 Minutes"),
            new AvailableRecipes(new Recipe("Vegetable Salad", "/recipes", "/recipe-photos/vegetable_salad.jpg", new List<Ingredient>()), new List<Tags>() {Tags.Dinner, Tags.Easy, Tags.Vegetarian}, "A healthy green vegetable salad", "10 Minutes")
        };

        All_Filters = new AllFilters();
    }

    protected void favouriteRecipe(AvailableRecipes recipe)
    {
        user.FavouriteRecipes.Add(recipe);
        toastService.ShowSuccess("Successfully added to favorites!");
    }

}