@page "/meal-plan"
@inject User user
@inject IToastService toastService

<PageTitle>Meal Plan</PageTitle>

<div id="content">
    <h1 id="title">Meal Plan</h1>
    <div class="buttons">
        <button @onclick="@ClearMealPlan">Clear Meal Plan</button>
        <button @onclick="@AddToGroceryList">Add to Grocery List</button>
    </div>
    
    <div class="day saved">
        <h2>Saved Recipes</h2>
        @if (SavedRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in SavedRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Sunday</h2>
        @if (SundayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in SundayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Monday</h2>
        @if (MondayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in MondayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Tuesday</h2>
        @if (TuesdayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in TuesdayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Wednesday</h2>
        @if (WednesdayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in WednesdayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Thursday</h2>
        @if (ThursdayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in ThursdayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Friday</h2>
        @if (FridayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in FridayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <div class="day">
        <h2>Saturday</h2>
        @if (SaturdayRecipes?.Any() ?? false)
        {
            <div class="recipes">
                @foreach (var recipe in SaturdayRecipes)
                {
                    <div class="recipe" style="background-image: url(@recipe.Recipe.Image)">
                        <div class="buttons">
                            <a class="recipe-link secondary-recipe-link" href="@recipe.Recipe.Link">
                                <div class="recipe-button"></div>
                            </a>
                            <button class="edit-button fa fa-pencil" @onclick="() => ShowEditPopup(recipe)"></button>
                        </div>
                        <a class="recipe-link main-recipe-link" href="@recipe.Recipe.Link">
                            <div class="recipe-title">
                                <h3 class="recipe-background recipe-name">@recipe.Recipe.Name</h3>
                                @if(recipe.Category is not null)
                                {
                                    <h4 class="recipe-category recipe-background">@recipe.Category</h4>
                                }
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No recipes.</p>
        }
    </div>

    <button id="add-recipes" @onclick="@ShowPopup">ADD RECIPES</button>
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    public IList<MealPlanRecipe> SavedRecipes => user.SavedRecipes;
    public IList<MealPlanRecipe> SundayRecipes => user.SundayRecipes;
    public IList<MealPlanRecipe> MondayRecipes => user.MondayRecipes;
    public IList<MealPlanRecipe> TuesdayRecipes => user.TuesdayRecipes;
    public IList<MealPlanRecipe> WednesdayRecipes => user.WednesdayRecipes;
    public IList<MealPlanRecipe> ThursdayRecipes => user.ThursdayRecipes;
    public IList<MealPlanRecipe> FridayRecipes => user.FridayRecipes;
    public IList<MealPlanRecipe> SaturdayRecipes => user.SaturdayRecipes;

    public MealPlan()
    {
        Modal = new ModalService();
    }

    protected async void ShowPopup()
    {
        var formModal = Modal.Show<AddRecipePopup>("", new ModalOptions() {Class="custom-modal"});
        var result = await formModal.Result;

        if(result.Data is null) return;

        foreach(var recipe in (IList<MealPlanRecipe>) result.Data)
        {
            switch (recipe.Date)
            {
                case Date.Sunday:
                    SundayRecipes.Add(recipe);
                    break;
                case Date.Monday:
                    MondayRecipes.Add(recipe);
                    break;
                case Date.Tuesday:
                    TuesdayRecipes.Add(recipe);
                    break;
                case Date.Wednesday:
                    WednesdayRecipes.Add(recipe);
                    break;
                case Date.Thursday:
                    ThursdayRecipes.Add(recipe);
                    break;
                case Date.Friday:
                    FridayRecipes.Add(recipe);
                    break;
                case Date.Saturday:
                    SaturdayRecipes.Add(recipe);
                    break;
                default:
                    SavedRecipes.Add(recipe);
                    break;
            }
        }

        toastService.ShowSuccess("Successfully added recipes to meal plan!");
        StateHasChanged();
    }


    protected async void ShowEditPopup(MealPlanRecipe recipe)
    {
        var oldRecipe = new MealPlanRecipe(recipe.Recipe, recipe.Date, recipe.Category);

        var parameters = new ModalParameters();
        parameters.Add(nameof(EditRecipePopup.Recipe), recipe);

        var formModal = Modal.Show<EditRecipePopup>("", parameters, new ModalOptions() {Class="custom-modal"});
        var result = await formModal.Result;

        if(result.Data is null) return;

        var updatedRecipe = (MealPlanRecipe) result.Data;

        MealPlanRecipe recipeToRemove;
        switch (oldRecipe.Date)
        {
            case Date.Sunday:
                recipeToRemove = SundayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                SundayRecipes.Remove(recipeToRemove);
                break;
            case Date.Monday:
                recipeToRemove = MondayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                MondayRecipes.Remove(recipeToRemove);
                break;
            case Date.Tuesday:
                recipeToRemove = TuesdayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                TuesdayRecipes.Remove(recipeToRemove);
                break;
            case Date.Wednesday:
                recipeToRemove = WednesdayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                WednesdayRecipes.Remove(recipeToRemove);
                break;
            case Date.Thursday:
                recipeToRemove = ThursdayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                ThursdayRecipes.Remove(recipeToRemove);
                break;
            case Date.Friday:
                recipeToRemove = FridayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                FridayRecipes.Remove(recipeToRemove);
                break;
            case Date.Saturday:
                recipeToRemove = SaturdayRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                SaturdayRecipes.Remove(recipeToRemove);
                break;
            default:
                recipeToRemove = SavedRecipes.Where(x => x.Recipe == oldRecipe.Recipe).First();
                SavedRecipes.Remove(recipeToRemove);
                break;
        }

        switch (updatedRecipe.Date)
        {
            case Date.Sunday:
                SundayRecipes.Add(updatedRecipe);
                break;
            case Date.Monday:
                MondayRecipes.Add(updatedRecipe);
                break;
            case Date.Tuesday:
                TuesdayRecipes.Add(updatedRecipe);
                break;
            case Date.Wednesday:
                WednesdayRecipes.Add(updatedRecipe);
                break;
            case Date.Thursday:
                ThursdayRecipes.Add(updatedRecipe);
                break;
            case Date.Friday:
                FridayRecipes.Add(updatedRecipe);
                break;
            case Date.Saturday:
                SaturdayRecipes.Add(updatedRecipe);
                break;
            default:
                SavedRecipes.Add(updatedRecipe);
                break;
        }

        toastService.ShowSuccess("Successfully updated recipe!");
        StateHasChanged();
    }

    protected void ClearMealPlan()
    {
        SavedRecipes.Clear();
        SundayRecipes.Clear();
        MondayRecipes.Clear();
        TuesdayRecipes.Clear();
        WednesdayRecipes.Clear();
        ThursdayRecipes.Clear();
        FridayRecipes.Clear();
        SaturdayRecipes.Clear();

        toastService.ShowSuccess("Successfully cleared meal plan!");
    }

    protected void AddToGroceryList()
    {
        var ingredients = SavedRecipes.SelectMany(x => x.Recipe.Ingredients).ToList();
        ingredients.AddRange(SundayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());
        ingredients.AddRange(MondayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());
        ingredients.AddRange(TuesdayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());
        ingredients.AddRange(WednesdayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());
        ingredients.AddRange(ThursdayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());
        ingredients.AddRange(FridayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());
        ingredients.AddRange(SaturdayRecipes.SelectMany(x => x.Recipe.Ingredients).ToList());

        user.Groceries.AddRange(ingredients);

        toastService.ShowSuccess("Successfully added grocery list to meal plan!");
    }
}